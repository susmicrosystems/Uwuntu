EKLAT_1.0 {
	global:
		call_once;
		cnd_broadcast;
		cnd_destroy;
		cnd_init;
		cnd_signal;
		cnd_timewait;
		cnd_wait;
		mtx_destroy;
		mtx_init;
		mtx_lock;
		mtx_timedlock;
		mtx_trylock;
		mtx_unlock;
		pthread_atfork;
		pthread_attr_destroy;
		pthread_attr_getdetachstate;
		pthread_attr_getstack;
		pthread_attr_getstacksize;
		pthread_attr_init;
		pthread_attr_setdetachstate;
		pthread_attr_setstack;
		pthread_attr_setstacksize;
		pthread_barrierattr_destroy;
		pthread_barrierattr_init;
		pthread_barrier_destroy;
		pthread_barrier_init;
		pthread_barrier_wait;
		pthread_cancel;
		pthread_cleanup_pop;
		pthread_cleanup_push;
		pthread_compare;
		pthread_condattr_destroy;
		pthread_condattr_init;
		pthread_cond_broadcast;
		pthread_cond_destroy;
		pthread_cond_init;
		pthread_cond_signal;
		pthread_cond_timedwait;
		pthread_cond_wait;
		pthread_create;
		pthread_detach;
		pthread_equal;
		pthread_exit;
		pthread_getspecific;
		pthread_join;
		pthread_key_create;
		pthread_key_delete;
		pthread_kill;
		pthread_mutexattr_destroy;
		pthread_mutexattr_gettype;
		pthread_mutexattr_init;
		pthread_mutexattr_settype;
		pthread_mutex_destroy;
		pthread_mutex_init;
		pthread_mutex_lock;
		pthread_mutex_timedlock;
		pthread_mutex_trylock;
		pthread_mutex_unlock;
		pthread_once;
		pthread_rwlockattr_destroy;
		pthread_rwlockattr_init;
		pthread_rwlock_destroy;
		pthread_rwlock_init;
		pthread_rwlock_rdlock;
		pthread_rwlock_timedrdlock;
		pthread_rwlock_timedwrlock;
		pthread_rwlock_tryrdlock;
		pthread_rwlock_trywrlock;
		pthread_rwlock_unlock;
		pthread_rwlock_wrlock;
		pthread_self;
		pthread_setschedprio;
		pthread_setspecific;
		pthread_sigmask;
		pthread_spin_destroy;
		pthread_spin_init;
		pthread_spin_lock;
		pthread_spin_trylock;
		pthread_spin_unlock;
		thrd_create;
		thrd_current;
		thrd_detach;
		thrd_equal;
		thrd_exit;
		thrd_join;
		thrd_sleep;
		thrd_yield;
		tss_create;
		tss_delete;
		tss_get;
		tss_set;
	local: *;
};
